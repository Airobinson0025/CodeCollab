// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  username       String          @unique
  email          String          @unique
  password       String
  active         Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  ActivateToken  ActivateToken[]
  sessions       Session[]
  sessionMembers SessionMember[]
}

model ActivateToken {
  id          String    @id @default(uuid())
  token       String    @unique
  activatedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id])
}

// model Account {
//   id        String   @id @default(cuid())
//   name      String
//   image     String
//   bio       String
//   phone     String
//   userId    String   @unique
//   user      User     @relation(fields: [userId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Session {
  id          String          @id @default(cuid())
  title       String
  description String
  repo        String
  language    String
  online      Boolean         @default(false)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  members     SessionMember[]
  userId      String
  user        User            @relation(fields: [userId], references: [id])
}

model SessionMember {
  id        String   @id @default(cuid())
  sessionId String
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
